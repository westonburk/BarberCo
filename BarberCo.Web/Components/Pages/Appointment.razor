@page "/appointment"
@using System.ComponentModel.DataAnnotations
@inject IServiceService ServiceService
@inject ILogger<Service> logger

<div class="appointment-container">
    <h1>Appointment</h1>
    <EditForm Model="@formData" OnInvalidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <div class="row mb-3">
            <div class="col-md-6">
                <label for="name">Name:</label>
                <InputText id="name" class="form-control" @bind-Value="formData.Name" />
                <ValidationMessage For="@(() => formData.Name)" />
            </div>
            <div class="col-md-6">
                <label for="phone">Phone:</label>
                <InputText id="phone" class="form-control" @bind-Value="formData.Phone" />
                <ValidationMessage For="@(() => formData.Phone)" />
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-6">
                <label for="services-multiselect">Service(s):</label>
                <select id="services-multiselect" multiple>
                    @foreach (var service in services)
                    {
                        <option value="@service">@($"{service.Name}   {service.Price:C2}")</option>
                    }
                </select>

            </div>
        </div>
        <button type="submit" class="btn-appointment">Submit</button>

    </EditForm>
</div>


@code {
    private FormData formData = new FormData();
    private List<Service> services = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadServicesAsync();
        await base.OnInitializedAsync();
    }

    private async Task LoadServicesAsync()
    {
        try
        {
            services = await ServiceService.GetAllServicesAsync();
        }
        catch (Exception ex)
        {
            logger.LogError(ex, $"failed to load {nameof(Service)} from api");
        }
    }

    private void HandleValidSubmit()
    {
        
    }

    public class FormData
    {
        [Required]
        public string Name { get; set; }

        [Required]
        [Phone]
        public string Phone { get; set; }

        

    }
}
